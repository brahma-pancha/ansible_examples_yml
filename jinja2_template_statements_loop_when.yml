#Jinja2's loop statements and conditional statements can be used together in a template to achieve more complex and dynamic results.

#Here's an example of using the for loop and when statement in an Ansible playbook:

---
- name: Use Jinja2 loop and conditional statements in Ansible
  hosts: all
  become: yes
  gather_facts: no
  vars:
    users:
      - name: User 1
        email: user1@example.com
        admin: true
      - name: User 2
        email: user2@example.com
        admin: false

  tasks:
  - name: Create a file with Jinja2 loop and conditional statements
    copy:
      content: |
        {% for user in users %}
        Name: {{ user.name }}
        Email: {{ user.email }}
        {% if user.admin %}
        Role: Admin
        {% else %}
        Role: User
        {% endif %}

        {% endfor %}
      dest: /tmp/users.txt

#In this playbook, a variable users is defined with a list of dictionaries representing users. The copy module is used to create a file at /tmp/users.txt with the content of a Jinja2 template.

#The template contains a for loop that iterates over the users list and renders the name, email, and admin fields of each user. The if statement inside the loop checks the value of the admin field and renders the role of each user as Admin or User based on the value of the admin field.

#Note: You can use the for loop, when statement, and other Jinja2 features, such as filters, to create complex and dynamic templates in Ansible.
